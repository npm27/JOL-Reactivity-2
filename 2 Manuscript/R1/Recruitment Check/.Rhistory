install.packages(lrd)
install.packages('lrd')
install.packages("ggplot2")
install.packages("ez")
install.packages("reshape")
install.packages("stringr")
install.packages("stringi")
58000/12
58000 - 19900
19900 * .10
38100 * .12
4572 + 1990
58000-6562
51438/12
4286.5-400-430
3456.5-1005-120-220-500-200-75-60-100-200-100-30-10
90*4
3456.5-836.5
690+210+360+200+200+50+60+100+100
1970 / 2620
851.12*2
1702.24+820
2522.24 / 3456.5
15 * 20
300 * 4
1000
1000+3456
25.48/4
6.37831
6.37831*31
4300 - 1700
900 - 250
18.22*20
364*4
1456*12
1456*24
4833 * .70
3383 - 1005 - 30 - 30 - 400 - 100 - 175 - 200 - 50 - 200
58000 - 4664
5336 * .22
53336 * .22
40525 * .22
58000 - (4664 + 8915.5)
44420.5/12
58000 - 1990
56010 * .12
6721.2+1990
58000 - 8711.2
49288 / 12
setwd("~/GitHub/JOL-Reactivity-2/2 Manuscript/R1/Recruitment Check")
####Run R1's suggested analyses####
##libraries
library(ez)
install.packages("psychReport")
####Run R1's suggested analyses####
##libraries
library(ez)
library(psychReport)
library(reshape)
##scientific notation
options(scipen = 999)
####Experiment 1####
mixed = read.csv("EX1/mixed.csv")
pure = read.csv("Ex1/pure.csv")
##okay, ANOVA looking only the related pairs... I'm convinced this will blow up
mixed.r = subset(mixed,
mixed$Direction == "F")
pure.r = subset(pure,
pure$Direction == "F")
View(pure.r)
pure.r = pure.r[ , -c(7:8)]
View(mixed.r)
pure.r$List_Type = rep("Pure")
##now combine the related pairs
all.r = rbind(mixed.r, pure.r)
View(pure.r)
model = ezANOVA(all.r,
between = .(Encoding, List_Type),
wid = id,
dv = Scored,
type = 3,
detailed = T)
model
model$ANOVA$MSE = model$ANOVA$SSd/model$ANOVA$DFd
model$ANOVA$MSE
model
#sig main effect of encoding group
tapply(all.r$Scored, all.r$Encoding, mean)
tapply(all.r$Scored, list(all.r$Encoding, all.r$List_Type), mean)
View(all.r)
#t-tests
all.r2 = cast(all.r[ , c(1:4,6:7,5)], id ~ Encoding, mean)
View(all.r2)
#jol vs freq
temp = t.test(all.r2$JOL, all.r2$Frequency, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
#jol vs read
temp = t.test(all.r2$JOL, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #p = .46
#freq vs read
temp = t.test(all.r2$Frequency, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
####Experiment 2####
mixed = read.csv("EX2/mixed.csv")
pure = read.csv("Ex2/pure.csv")
##okay, ANOVA looking only the related pairs... I'm convinced this will blow up
mixed.r = subset(mixed,
mixed$Direction == "B")
pure.r = subset(pure,
pure$Direction == "B")
pure.r = pure.r[ , -c(7:8)]
pure.r$List_Type = rep("Pure")
##now combine the related pairs
all.r = rbind(mixed.r, pure.r)
#2 (JOL vs. read only) x 2 (mixed vs. pure)
#3 (JOL vs. freq. vs read) x 2(mixed vs. pure)
model = ezANOVA(all.r,
between = .(Encoding, List_Type),
wid = id,
dv = Scored,
type = 3,
detailed = T)
model$ANOVA$MSE = model$ANOVA$SSd/model$ANOVA$DFd
model$ANOVA$MSE
model
#sig main effect of encoding group
tapply(all.r$Scored, all.r$Encoding, mean)
tapply(all.r$Scored, list(all.r$Encoding, all.r$List_Type), mean)
#t-tests
all.r2 = cast(all.r[ , c(1:4,6:7,5)], id ~ Encoding, mean)
#jol vs freq
temp = t.test(all.r2$JOL, all.r2$Frequency, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #p = .46
#jol vs read
temp = t.test(all.r2$JOL, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
#freq vs read
temp = t.test(all.r2$Frequency, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
####Experiment 3####
mixed = read.csv("EX3/mixed.csv")
pure = read.csv("Ex3/pure.csv")
##okay, ANOVA looking only the related pairs... I'm convinced this will blow up
mixed.r = subset(mixed,
mixed$Direction == "B")
pure.r = subset(pure,
pure$Direction == "B")
pure.r = pure.r[ , -c(7:8)]
pure.r$List_Type = rep("Pure")
####Experiment 3####
mixed = read.csv("EX3/mixed.csv")
pure = read.csv("Ex3/pure.csv")
##okay, ANOVA looking only the related pairs... I'm convinced this will blow up
mixed.r = subset(mixed,
mixed$Direction == "S")
pure.r = subset(pure,
pure$Direction == "S")
pure.r = pure.r[ , -c(7:8)]
pure.r$List_Type = rep("Pure")
##now combine the related pairs
all.r = rbind(mixed.r, pure.r)
#2 (JOL vs. read only) x 2 (mixed vs. pure)
#3 (JOL vs. freq. vs read) x 2(mixed vs. pure)
model = ezANOVA(all.r,
between = .(Encoding, List_Type),
wid = id,
dv = Scored,
type = 3,
detailed = T)
model$ANOVA$MSE = model$ANOVA$SSd/model$ANOVA$DFd
model$ANOVA$MSE
model #looks like the same pattern as Ex 1
#sig main effect of encoding group
tapply(all.r$Scored, all.r$Encoding, mean)
tapply(all.r$Scored, list(all.r$Encoding, all.r$List_Type), mean)
tapply(all.r$Scored, all.r$List_Type, mean)
tapply(all.r$Scored, list(all.r$Encoding, all.r$List_Type), mean)
#t-tests
all.r2 = cast(all.r[ , c(1:4,6:7,5)], id ~ Encoding, mean)
#jol vs freq
temp = t.test(all.r2$JOL, all.r2$Frequency, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
source("~/GitHub/JOL-Reactivity-2/2 Manuscript/R1/Recruitment Check/Alt Analyses.R", echo=TRUE)
####Experiment 3####
mixed = read.csv("EX3/mixed.csv")
pure = read.csv("Ex3/pure.csv")
##okay, ANOVA looking only the related pairs... I'm convinced this will blow up
mixed.r = subset(mixed,
mixed$Direction == "S")
pure.r = subset(pure,
pure$Direction == "S")
pure.r = pure.r[ , -c(7:8)]
pure.r$List_Type = rep("Pure")
##now combine the related pairs
all.r = rbind(mixed.r, pure.r)
#2 (JOL vs. read only) x 2 (mixed vs. pure)
#3 (JOL vs. freq. vs read) x 2(mixed vs. pure)
model = ezANOVA(all.r,
between = .(Encoding, List_Type),
wid = id,
dv = Scored,
type = 3,
detailed = T)
model$ANOVA$MSE = model$ANOVA$SSd/model$ANOVA$DFd
model$ANOVA$MSE
model #looks like the same pattern as Ex 1
#sig main effect of encoding group
tapply(all.r$Scored, all.r$Encoding, mean)
tapply(all.r$Scored, all.r$List_Type, mean)
tapply(all.r$Scored, list(all.r$Encoding, all.r$List_Type), mean)
#t-tests
all.r2 = cast(all.r[ , c(1:4,6:7,5)], id ~ Encoding, mean)
#jol vs freq
temp = t.test(all.r2$JOL, all.r2$Frequency, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #p = .54
#jol vs read
temp = t.test(all.r2$JOL, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
#freq vs read
temp = t.test(all.r2$Frequency, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
tapply(all.r$Scored, all.r$List_Type, mean)
####Run R1's suggested analyses####
####Set up####
##libraries
library(ez)
library(psychReport)
library(reshape)
##scientific notation
options(scipen = 999)
####Experiment 1####
mixed = read.csv("EX1/mixed.csv")
pure = read.csv("Ex1/pure.csv")
##okay, ANOVA looking only the related pairs...
mixed.r = subset(mixed,
mixed$Direction == "F")
pure.r = subset(pure,
pure$Direction == "F")
pure.r = pure.r[ , -c(7:8)]
pure.r$List_Type = rep("Pure")
##now combine the related pairs
all.r = rbind(mixed.r, pure.r)
#2 (JOL vs. read only) x 2 (mixed vs. pure)
#3 (JOL vs. freq. vs read) x 2(mixed vs. pure)
model = ezANOVA(all.r,
between = .(Encoding, List_Type),
wid = id,
dv = Scored,
type = 3,
detailed = T)
model$ANOVA$MSE = model$ANOVA$SSd/model$ANOVA$DFd
model$ANOVA$MSE
model
#sig main effect of encoding group
tapply(all.r$Scored, all.r$Encoding, mean)
tapply(all.r$Scored, list(all.r$Encoding, all.r$List_Type), mean)
#t-tests
all.r2 = cast(all.r[ , c(1:4,6:7,5)], id ~ Encoding, mean)
#jol vs freq
temp = t.test(all.r2$JOL, all.r2$Frequency, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #p = .46
#jol vs read
temp = t.test(all.r2$JOL, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
#freq vs read
temp = t.test(all.r2$Frequency, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
####Run R1's suggested analyses####
####Set up####
##libraries
library(ez)
library(psychReport)
library(reshape)
##scientific notation
options(scipen = 999)
####Experiment 1####
mixed = read.csv("EX1/mixed.csv")
pure = read.csv("Ex1/pure.csv")
##okay, ANOVA looking only the related pairs...
mixed.r = subset(mixed,
mixed$Direction == "F")
pure.r = subset(pure,
pure$Direction == "F")
pure.r = pure.r[ , -c(7:8)]
pure.r$List_Type = rep("Pure")
##now combine the related pairs
all.r = rbind(mixed.r, pure.r)
#2 (JOL vs. read only) x 2 (mixed vs. pure)
#3 (JOL vs. freq. vs read) x 2(mixed vs. pure)
model = ezANOVA(all.r,
between = .(Encoding, List_Type),
wid = id,
dv = Scored,
type = 3,
detailed = T)
model$ANOVA$MSE = model$ANOVA$SSd/model$ANOVA$DFd
model$ANOVA$MSE
model
#sig main effect of encoding group
tapply(all.r$Scored, all.r$Encoding, mean)
tapply(all.r$Scored, list(all.r$Encoding, all.r$List_Type), mean)
#t-tests
all.r2 = cast(all.r[ , c(1:4,6:7,5)], id ~ Encoding, mean)
#jol vs freq
temp = t.test(all.r2$JOL, all.r2$Frequency, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #p = .46
#jol vs read
temp = t.test(all.r2$JOL, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
#freq vs read
temp = t.test(all.r2$Frequency, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
View(pure.r)
##Run the one-way ANOVA
ezANOVA(pure.r,
dv = Scored,
wid = id,
between = Encoding,
type = 3,
detailed = T)
####Experiment 2####
mixed = read.csv("EX2/mixed.csv")
pure = read.csv("Ex2/pure.csv")
##okay, ANOVA looking only the related pairs... I'm convinced this will blow up
mixed.r = subset(mixed,
mixed$Direction == "B")
pure.r = subset(pure,
pure$Direction == "B")
pure.r = pure.r[ , -c(7:8)]
pure.r$List_Type = rep("Pure")
##now combine the related pairs
all.r = rbind(mixed.r, pure.r)
#2 (JOL vs. read only) x 2 (mixed vs. pure)
#3 (JOL vs. freq. vs read) x 2(mixed vs. pure)
model = ezANOVA(all.r,
between = .(Encoding, List_Type),
wid = id,
dv = Scored,
type = 3,
detailed = T)
model$ANOVA$MSE = model$ANOVA$SSd/model$ANOVA$DFd
model$ANOVA$MSE
model #looks like the same pattern as Ex 1
#sig main effect of encoding group
tapply(all.r$Scored, all.r$Encoding, mean)
tapply(all.r$Scored, list(all.r$Encoding, all.r$List_Type), mean)
#t-tests
all.r2 = cast(all.r[ , c(1:4,6:7,5)], id ~ Encoding, mean)
#jol vs freq
temp = t.test(all.r2$JOL, all.r2$Frequency, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #p = .54
#jol vs read
temp = t.test(all.r2$JOL, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
#freq vs read
temp = t.test(all.r2$Frequency, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
#Yep, the same pattern w/ backward pairs
##Run the one-way ANOVA
ezANOVA(pure.r,
dv = Scored,
wid = id,
between = Encoding,
type = 3,
detailed = T) #Comes out Sig, as expected.
####Experiment 3####
mixed = read.csv("EX3/mixed.csv")
pure = read.csv("Ex3/pure.csv")
##okay, ANOVA looking only the related pairs... I'm convinced this will blow up
mixed.r = subset(mixed,
mixed$Direction == "S")
pure.r = subset(pure,
pure$Direction == "S")
pure.r = pure.r[ , -c(7:8)]
pure.r$List_Type = rep("Pure")
##now combine the related pairs
all.r = rbind(mixed.r, pure.r)
#2 (JOL vs. read only) x 2 (mixed vs. pure)
#3 (JOL vs. freq. vs read) x 2(mixed vs. pure)
model = ezANOVA(all.r,
between = .(Encoding, List_Type),
wid = id,
dv = Scored,
type = 3,
detailed = T)
model$ANOVA$MSE = model$ANOVA$SSd/model$ANOVA$DFd
model$ANOVA$MSE
model #looks like the same pattern as Ex 1
#sig main effect of encoding group
tapply(all.r$Scored, all.r$Encoding, mean)
tapply(all.r$Scored, all.r$List_Type, mean)
tapply(all.r$Scored, list(all.r$Encoding, all.r$List_Type), mean)
#t-tests
all.r2 = cast(all.r[ , c(1:4,6:7,5)], id ~ Encoding, mean)
#jol vs freq
temp = t.test(all.r2$JOL, all.r2$Frequency, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #p = .42
#jol vs read
temp = t.test(all.r2$JOL, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
#freq vs read
temp = t.test(all.r2$Frequency, all.r2$READ, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp #sig! p < .001
#And the pattern occurs w/ symmetrical pairs
#And the pattern occurs w/ symmetrical pairs
##Run the one-way ANOVA
ezANOVA(pure.r,
dv = Scored,
wid = id,
between = Encoding,
type = 3,
detailed = T) #Comes out Sig, again (p = .02)
